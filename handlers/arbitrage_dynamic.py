from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
import json

router = Router()

FILTERS_FILE = "filters.json"

@router.callback_query(F.data == "arbitrage")
async def show_arbitrage(call: CallbackQuery):
    user_id = str(call.from_user.id)
    try:
        with open(FILTERS_FILE, "r") as f:
            filters = json.load(f)
        user_filter = filters.get(user_id)
    except:
        user_filter = None

    if not user_filter:
        await call.message.edit_text(
            "üìä <b>–ê—Ä–±–∏—Ç—Ä–∞–∂</b>\n\n"
            "‚ùó –£ –≤–∞—Å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ñ–∏–ª—å—Ç—Ä.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /filter, —á—Ç–æ–±—ã –µ–≥–æ —Å–æ–∑–¥–∞—Ç—å.",
            parse_mode="HTML"
        )
        return

    # –ó–∞–≥–ª—É—à–∫–∞ ‚Äî –ø—Ä–∏–º–µ—Ä —Å–¥–µ–ª–æ–∫
    example_deals = [
        {"buy": 41.10, "sell": 42.85, "volume": 95, "url": "https://example.com/deal1"},
        {"buy": 40.90, "sell": 43.00, "volume": 100, "url": "https://example.com/deal2"}
    ]

    matched = []
    for deal in example_deals:
        if (
            deal["buy"] <= user_filter["buy_price"] and
            deal["sell"] >= user_filter["sell_price"] and
            deal["volume"] <= user_filter["volume"]
        ):
            matched.append(deal)

    if not matched:
        await call.message.edit_text(
            "üìä <b>–ê—Ä–±–∏—Ç—Ä–∞–∂</b>\n\n"
            "‚ö†Ô∏è –°–µ–π—á–∞—Å –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–¥–µ–ª–æ–∫ –ø–æ –≤–∞—à–µ–º—É —Ñ–∏–ª—å—Ç—Ä—É.",
            parse_mode="HTML"
        )
        return

    text = "üìä <b>–ù–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫:</b>\n\n"
    for deal in matched:
        text += (
            f"üü¢ –ö—É–ø–∏—Ç—å –ø–æ: <b>{deal['buy']}</b>\n"
            f"üî¥ –ü—Ä–æ–¥–∞—Ç—å –ø–æ: <b>{deal['sell']}</b>\n"
            f"üíµ –û–±—ä—ë–º: ${deal['volume']}\n"
            f"üîó <a href='{deal['url']}'>–û—Ç–∫—Ä—ã—Ç—å –æ—Ä–¥–µ—Ä</a>\n\n"
        )

    await call.message.edit_text(text, parse_mode="HTML")

# main.py
from aiogram import Bot, Dispatcher
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.client.session import AiohttpSession, DefaultBotProperties
import asyncio

API_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
session = AiohttpSession()
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode="HTML"), session=session)
dp = Dispatcher()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("üÜì Free Version")],
        [KeyboardButton("‚öôÔ∏è Settings")],
    ],
    resize_keyboard=True,
    is_persistent=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª",
)

@dp.message.register(commands=["start"])
async def cmd_start(message: Message):
    await message.answer(
        text=(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n"
            "<b>Free Version:</b> –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–¥–Ω–æ–π –±–∏—Ä–∂–∏ P2P (Binance, Bybit, OKX, Bitget).\n"
            "–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π."
        ),
        reply_markup=main_kb
    )

@dp.message.register(lambda m: m.text == "üÜì Free Version")
async def free_version(message: Message):
    await message.answer(
        text="–í—ã –≤—ã–±—Ä–∞–ª–∏ Free Version. –í—ã–±–µ—Ä–∏—Ç–µ –±–∏—Ä–∂—É:\n/binance, /bybit, /okx, /bitget",
        reply_markup=main_kb
    )

@dp.message.register(commands=["binance", "bybit", "okx", "bitget"])
async def select_exchange(message: Message):
    exch = message.text.lstrip("/").capitalize()
    await message.answer(f"–ù–∞—Å—Ç—Ä–æ–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–∏—Ä–∂–∏: {exch}", reply_markup=main_kb)

@dp.message.register(lambda m: m.text == "‚öôÔ∏è Settings")
async def settings(message: Message):
    await message.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.", reply_markup=main_kb)

async def main():
    try:
        await dp.start_polling(bot)
    finally:
        await session.close()

if __name__ == "__main__":
    asyncio.run(main())

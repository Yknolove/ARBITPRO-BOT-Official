import json
import logging
import asyncio
from aiohttp import ClientSession
from config import FILTERS_FILE
from services.filter_engine import apply_filters


async def start_aggregator(queue, session: ClientSession, bot):
    logging.info("üü¢ –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω")

    while True:
        try:
            async with session.get("https://api.bybit.com/v5/market/tickers?category=spot") as resp:
                data = await resp.json()
                tickers = data.get("result", {}).get("list", [])
                logging.info(f"üü¢ Bybit –≤–µ—Ä–Ω—É–ª {len(tickers)} —Ç–∏–∫–µ—Ä–æ–≤")

        except Exception as e:
            logging.error("üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å Bybit", exc_info=e)
            await asyncio.sleep(15)
            continue

        try:
            with open(FILTERS_FILE, "r") as f:
                filters = json.load(f)
        except Exception as e:
            logging.warning("‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", exc_info=e)
            filters = {}

        orders = apply_filters(tickers, filters)

        for order in orders:
            chat_id = order["chat_id"]
            symbol = order["symbol"]
            buy = order["buy"]
            sell = order["sell"]
            volume = order["volume"]

            text = (
                f"üì¢ –ù–∞–π–¥–µ–Ω –∞—Ä–±–∏—Ç—Ä–∞–∂ –ø–æ <b>{symbol}</b>:\n"
                f"üí∞ –ü–æ–∫—É–ø–∫–∞: {buy}\n"
                f"üíµ –ü—Ä–æ–¥–∞–∂–∞: {sell}\n"
                f"üì¶ –û–±—ä—ë–º: {volume}"
            )

            try:
                await bot.send_message(chat_id, text, parse_mode="HTML")
            except Exception as e:
                logging.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}", exc_info=e)

        logging.info("üîÅ –¶–∏–∫–ª –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à—ë–Ω, —Å–ø–∏–º 15 —Å–µ–∫—É–Ω–¥")
        await asyncio.sleep(15)

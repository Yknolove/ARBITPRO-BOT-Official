import asyncio
import json
import logging
from services.rate_fetcher import RateFetcher
from services.filter_engine import apply_filters

FILTERS_FILE = "filters.json"

async def start_aggregator(bot):
    while True:
        try:
            from aiohttp import ClientSession
            async with ClientSession() as session:
                rf = RateFetcher(session)
                tickers = await rf.fetch_bybit()
                logging.info(f"üü¢ –ü–æ–ª—É—á–µ–Ω–æ {len(tickers)} —Ç–∏–∫–µ—Ä–æ–≤ –æ—Ç Bybit")

                matched = apply_filters(tickers, FILTERS_FILE)

                for item in matched:
                    try:
                        msg = (
                            f"üì£ –°–¥–µ–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:\n"
                            f"–ü–∞—Ä–∞: {item['symbol']}\n"
                            f"–¶–µ–Ω–∞: {item['price']}$\n"
                            f"–û–±—ä—ë–º: {item['volume']}$"
                        )
                        await bot.send_message(chat_id=int(item['chat_id']), text=msg)
                    except Exception as err:
                        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {err}")

        except Exception as e:
            logging.error("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞", exc_info=e)

        await asyncio.sleep(15)

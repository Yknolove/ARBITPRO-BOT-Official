import asyncio
from sqlalchemy import select
from aiogram import Bot
from config.db import AsyncSessionLocal
from models.user_setting import UserSetting
from config.config import API_TOKEN

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
bot = Bot(token=API_TOKEN)

async def filter_and_notify(rates: dict):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∫ –ë–î
    async with AsyncSessionLocal() as session:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å, –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã UserSetting
        result = await session.execute(select(UserSetting))
        settings = result.scalars().all()

    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞-–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä–æ–≥–∏
    for setting in settings:
        # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –º–æ–¥–µ–ª—å, –∞ –Ω–µ int
        # (–µ—Å–ª–∏ –∑–¥–µ—Å—å —Å–Ω–æ–≤–∞ int ‚Äî —Ñ–∞–π–ª –Ω–µ –∑–∞–º–µ–Ω—ë–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)
        exch = setting.exchange
        buy_p = rates.get(exch, {}).get("buy")
        sell_p = rates.get(exch, {}).get("sell")
        tasks = []

        if setting.buy_threshold is not None and buy_p is not None:
            if buy_p <= setting.buy_threshold:
                msg = (
                    f"üü¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏ –Ω–∞ {exch.title()}!\n"
                    f"–¶–µ–Ω–∞: {buy_p}‚Ç¥ (‚â§ –≤–∞—à –ø–æ—Ä–æ–≥ {setting.buy_threshold}‚Ç¥)\n"
                    "–û–±—ä—ë–º –¥–æ $100"
                )
                tasks.append(bot.send_message(setting.user_id, msg))

        if setting.sell_threshold is not None and sell_p is not None:
            if sell_p >= setting.sell_threshold:
                msg = (
                    f"üî¥ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ {exch.title()}!\n"
                    f"–¶–µ–Ω–∞: {sell_p}‚Ç¥ (‚â• –≤–∞—à –ø–æ—Ä–æ–≥ {setting.sell_threshold}‚Ç¥)\n"
                    "–û–±—ä—ë–º –¥–æ $100"
                )
                tasks.append(bot.send_message(setting.user_id, msg))

        if tasks:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
            asyncio.gather(*tasks)

# services/filter_engine.py

import asyncio
from services.notifier import notify_user

async def filter_and_notify(rates: dict, user_settings: list) -> None:
    """
    –ü—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ —Å–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—è
    –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    :param rates: —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã {exchange: {buy: ..., sell: ...}, ...}
    :param user_settings: —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ UserSetting
    """
    tasks = []
    for st in user_settings:
        # –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏–∫–∏: –µ—Å–ª–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –±–∏—Ä–∂–µ —Ç–µ–∫—É—â–∏–π SELL >= threshold
        current = rates.get(st.exchange, {})
        if current.get("sell", 0) >= (st.sell_threshold or 0):
            text = (
                f"üîî –ê—Ä–±–∏—Ç—Ä–∞–∂–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ!\n"
                f"<b>–ë–∏—Ä–∂–∞:</b> {st.exchange}\n"
                f"<b>SELL:</b> {current['sell']}\n"
                f"–í–∞—à –ø–æ—Ä–æ–≥: ‚â• {st.sell_threshold}"
            )
            tasks.append(notify_user(st.user_id, text))
        # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É BUY –∏ –æ–±—ä—ë–º–∞...
    if tasks:
        # –ñ–¥—ë–º –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        await asyncio.gather(*tasks)
